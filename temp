exports.login = async (req,res,next) => {
    
    let {email,password} = req.body

   let errors = validationResult(req).formatWith((error=>error.message))
   console.log(errors)

    try{
        console.log(errors)

       
    }
    catch(e){
        next(e)
    }

  }













  exports.register = (req,res) => {
        let {name,email,password , confirmPassword}  = req.body
        
      let validate = registerValidator({name,  email,password , confirmPassword})
     
      if(!validate.isValid){
        res.status(400).json(validate.error)
      }else{
        User.findOne({email})
          .then(user=>{
              if(user){
              return   res.status(400).json({
                     message:"Email Already Exist"
                 }) 
              }

             
              bcrypt.hash(password,11,(err,hash)=>{
                  if(err){
                      console.log(err)
                      return res.status(500).json({message:"Server Error Occurred"})
                  }
              


              let user = new User({
                name,email,password:hash
            })

            user.save()
             .then(user=>{
              
                  res.status(200).json({
                       message:"User Created Successfully",user
                   }) 
                })
             .catch(e=>{
                    console.log(e)
                    res.status(500).json({
                        message:'Server Error Occurredd'
                    })
                })
            })
        }
          )
          .catch(e => {
              console.log(e)
              res.status(500).json({
                  message:'Server Error Occurred'
              })
          })
       
        }